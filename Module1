Public Function lastrow(strsheet As String)With Sheets(strsheet)    If Application.WorksheetFunction.CountA(.Cells) <> 0 Then        lastrow = .Cells.Find(What:="*", _                      After:=.Range("A1"), _                      LookAt:=xlPart, _                      LookIn:=xlFormulas, _                      SearchOrder:=xlByRows, _                      SearchDirection:=xlPrevious, _                      MatchCase:=False).Row    Else        lastrow = 1    End IfEnd WithEnd Function
Public Function LastCol(strsheet As String)Dim iLastCol As Long
    With ThisWorkbook.Sheets(strsheet)        iLastCol = .Cells(1, .Columns.Count).End(xlToLeft).Column
    End With    LastCol = iLastColEnd Function
Public Function PrevSheet(rCell As Range)    Application.Volatile    Dim i As Integer    i = rCell.Cells(1).Parent.Index    PrevSheet = ThisWorkbook.Sheets(i - 1).Range(rCell.Address)End Function
Public Function Validatesheet()
Dim inull As IntegerDim iwrong As Integerinull = 0iwrong = 0For r = 2 To lastrow("mapping") 'walk through the mapping' walk through the mapping and Validate each mapped Cellstrtemp = Sheets("Mapping").Cells(r, 4)    If Len(strtemp) > 0 Then        If strtemp <> "Sheet" Then        With Sheets("Mapping")            strval = .Cells(r, 9)            strsheet = strtemp            strrow = .Cells(r, 5)            strcol = .Cells(r, 6)        End With        With Sheets(strsheet).Cells(strrow, strcol)        .Interior.ColorIndex = 20            strvalue = .Value            If Len(strvalue) < 1 Then                .Interior.ColorIndex = 3                inull = 1            Else                If strval = "Real" And Not IsNumeric(strvalue) Then                    .Interior.ColorIndex = 6                    iwrong = 1                End If                If strval = "Bool" And Not UCase(strvalue) = "YES" And Not UCase(strvalue) = "NO" Then                    .Interior.ColorIndex = 6                    iwrong = 1                End If            End If        End With        End If    End IfNext
If Sheets("Mapping").Cells(3, 26) = 2 Then    With Sheets("Mapping")        For i = 2 To lastrow("Mapping")            If Len(.Cells(i, 7)) > 0 And Len(.Cells(i, 4)) > 0 Then ' check that the attribute is per tag and that it is on the datasheet                itaglistrow = .Cells(i, 20)                strmapsheet = .Cells(i, 4)                imaprow = .Cells(i, 5)                imapcol = .Cells(i, 6)                Sheets(strmapsheet).Cells(imaprow, imapcol) = "See tag List"                Sheets(strmapsheet).Cells(imaprow, imapcol).Interior.ColorIndex = 15                If Sheets(strmapsheet).Cells(imaprow, imapcol).mergecells Then                    Set mergedrange = Sheets(strmapsheet).Cells(imaprow, imapcol).MergeArea                    mergedrange.Locked = True                Else                    Sheets(strmapsheet).Cells(imaprow, imapcol).Locked = True                End If                            End If        Next    End WithEnd IfIf inull = 1 Then    Validatesheet = 1 'nulls exist    Exit FunctionEnd If
If iwrong = 1 Then    Validatesheet = 2 'nulls exist    Exit FunctionEnd IfValidatesheet = 0
End Function
