#!/usr/bin/env ruby -w
# Copyright 2012 Wellstorm Development LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


require 'optparse'

require "las_file"
require "witsml_file"
require "las2witsml"
require "uom"

options = {:v=>false}

opts =OptionParser.new do |o|
  o.banner = "Usage: las2witsml [-n name] [-u uid] [-b uid] [-l uid] [-m uomfile] [-x version] [-h] [-v] lasfile"

  o.on("-n", "--namelog name", "Name to give the WITSML log; default 'Untitled'") do |v|
    options[:name] = v
  end

  o.on("-u", "--uidwell uid", "WITSML uid of the containing well") do |v|
    options[:uw] = v
  end
  o.on("-b", "--uidwellbore uid", "WITSML uid of the containing wellbore") do |v|
    options[:uwb] = v
  end
  o.on("-l", "--uidlog  uid", "WITSML uid to assign the log") do |v|
    options[:ul] = v
  end
  o.on("-x", "--version  version", "WITSML version to emit, either 1.3.1 or 1.4.1; default 1.4.1") do |v|
    options[:version] = v
  end

  o.on("-m", "--uomfile  path", "Path to a units of measure JSON file, mapping foreign to WITSML units of measure (like default file '#{Uom::default_uom_file}')") do |v|
    options[:uom_file] = v
  end

  o.on("-v", "--verbose", "Emit diagnostic output on stderr") do |v|
    options[:v] = v
  end

  o.on_tail("-h", "--help", "Show this message") do
    puts o
    exit
  end
end



opts.parse!
if ( !options[:url] )
  #puts(opts.help)
  #exit 1
end

succeed = false
ARGV.each do|a|
  l2w = Las2Witsml.new
  infile = File.new a, 'r'
  outfile = $stdout

  case options[:version]
  when '1.3.1', '1.3.1.1', '1.3.1.0'
    version = 1311
  else
    version = 1410
  end
  begin  
    succeed = l2w.run infile, outfile, options[:uw] || "",  options[:uwb] || "",  options[:ul] || "", options[:name] || 'Untitled', version, options[:v] != false, options[:uom_file]
  rescue => e
    $stderr.puts e
    exit 1
  end
end

if succeed 
  exit 0
else
  exit 1
end



